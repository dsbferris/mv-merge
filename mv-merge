#!/bin/bash

merge=0
force=0
compare=0
dry_run=0
rm_identical=0
args=()

# Parse flags
for arg in "$@"; do
    case "$arg" in
        -m|--merge)
            merge=1
            ;;
        -f|--force)
            force=1
            ;;
        -c|--compare-existing)
            compare=1
            ;;
        -n|--dry-run)
            dry_run=1
            ;;
        -r|--rm-identical)
            rm_identical=1
            ;;
        *)
            args+=("$arg")
            ;;
    esac
done

if [[ "${#args[@]}" -lt 2 ]]; then
    echo "Usage: $0 [-m|--merge] [-f|--force] [-c|--compare-existing] [-r|--rm-identical] [-n|--dry-run] <source>... <destination>"
    exit 1
fi

dst="${args[-1]}"
unset 'args[${#args[@]}-1]'

get_crc32() {
    cksum "$1" | awk '{print $1}'
}

compare_files() {
    src_file="$1"
    dst_file="$2"
    echo "==> Comparing:"
    echo "SRC: $src_file"
    echo "DST: $dst_file"
    echo "---"

    if [[ ! -e "$dst_file" ]]; then
        echo "Destination does not exist."
        return
    fi

    src_size=$(stat -c %s "$src_file")
    dst_size=$(stat -c %s "$dst_file")
    src_time=$(stat -c %y "$src_file")
    dst_time=$(stat -c %y "$dst_file")

    echo "SRC Size: $src_size bytes"
    echo "DST Size: $dst_size bytes"
    echo "SRC Time: $src_time"
    echo "DST Time: $dst_time"

    if [[ "$src_size" -ne "$dst_size" ]]; then
        echo "Files DIFFER (size mismatch)"
        echo
        return
    fi

    src_crc=$(get_crc32 "$src_file")
    dst_crc=$(get_crc32 "$dst_file")

    echo "SRC CRC32: $src_crc"
    echo "DST CRC32: $dst_crc"

    if [[ "$src_crc" == "$dst_crc" ]]; then
        echo "Files are IDENTICAL"
        if [[ "$rm_identical" -eq 1 ]]; then
            if [[ "$dry_run" -eq 1 ]]; then
                echo "WOULD REMOVE: $src_file"
            else
                rm -f "$src_file"
                echo "REMOVED: $src_file"
                dir="$(dirname "$src_file")"
                while [[ "$dir" != "." && "$dir" != "/" ]]; do
                    rmdir "$dir" 2>/dev/null || break
                    dir="$(dirname "$dir")"
                done
            fi
        fi
    else
        echo "Files DIFFER (CRC mismatch)"
    fi
    echo
}

if [[ "$merge" -eq 0 ]]; then
    for src in "${args[@]}"; do
        dst_file="$dst/$(basename "$src")"

        if [[ "$compare" -eq 1 ]]; then
            compare_files "$src" "$dst_file"
            continue
        fi

        if [[ -e "$dst_file" && "$force" -eq 0 ]]; then
            echo "SKIPPED (exists): $dst_file"
            continue
        fi

        if [[ "$dry_run" -eq 1 ]]; then
            echo "WOULD MOVE: $src -> $dst"
        else
            mv ${force:+-f} "$src" "$dst"
        fi
    done
    exit 0
fi

# Merge mode
for src in "${args[@]}"; do
    if [[ -d "$src" ]]; then
        base_name="$(basename "$src")"
        target_dir="$dst/$base_name"
        mkdir -p "$target_dir"

        find "$src" -type f | while read -r src_file; do
            rel_path="${src_file#$src/}"
            dst_file="$target_dir/$rel_path"
            dst_dir="$(dirname "$dst_file")"
            mkdir -p "$dst_dir"

            if [[ -e "$dst_file" ]]; then
                if [[ "$compare" -eq 1 ]]; then
                    compare_files "$src_file" "$dst_file"
                    continue
                fi

                if [[ "$force" -eq 1 ]]; then
                    if [[ "$dry_run" -eq 1 ]]; then
                        echo "WOULD OVERWRITE: $src_file -> $dst_file"
                    else
                        mv -f "$src_file" "$dst_file"
                        echo "OVERWRITTEN: $dst_file"
                    fi
                else
                    echo "SKIPPED (exists): $dst_file"
                fi
            else
                if [[ "$dry_run" -eq 1 ]]; then
                    echo "WOULD MOVE: $src_file -> $dst_file"
                else
                    mv "$src_file" "$dst_file"
                fi
            fi
        done

        if [[ "$dry_run" -eq 0 ]]; then
            find "$src" -depth -type d -empty -delete
            rmdir "$src" 2>/dev/null
        fi
    else
        dst_file="$dst/$(basename "$src")"

        if [[ -e "$dst_file" ]]; then
            if [[ "$compare" -eq 1 ]]; then
                compare_files "$src" "$dst_file"
                continue
            fi

            if [[ "$force" -eq 0 ]]; then
                echo "SKIPPED (exists): $dst_file"
                continue
            fi

            if [[ "$dry_run" -eq 1 ]]; then
                echo "WOULD OVERWRITE: $src -> $dst_file"
            else
                mv -f "$src" "$dst"
                echo "OVERWRITTEN: $dst_file"
            fi
        else
            if [[ "$dry_run" -eq 1 ]]; then
                echo "WOULD MOVE: $src -> $dst"
            else
                mv "$src" "$dst"
            fi
        fi
    fi
done
